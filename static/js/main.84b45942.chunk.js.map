{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toLocaleTimeString","undefined","hour12","prevProps","props","name","debug","clearInterval","className","Component","getRandomName","value","now","toString","slice","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KACN,EAAKT,MAAMC,KAAKS,wBAAmBC,EAAW,CAAEC,QAAQ,OAEzD,OAdP,gCAiBE,SAAmBC,GACbT,KAAKU,MAAMC,OAASF,EAAUE,MAChCP,QAAQQ,MAAR,uBAA8BH,EAAUE,KAAxC,eAAmDX,KAAKU,MAAMC,SAnBpE,kCAuBE,WACEV,OAAOY,cAAcb,KAAKD,WAxB9B,oBA2BE,WACE,IAAQY,EAASX,KAAKU,MAAdC,KACAd,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGjB,EAAKS,wBAAmBC,EAAW,CAAEC,QAAQ,aAxCxD,GAA2BO,aCD3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAGX,IAAMI,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVC,UAAW,WAHf,EAMExB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClByB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEmB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEmB,UAAU,OAG5BtB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEoB,UAAWP,QAC1B,QApBP,kCAuBE,WACEf,OAAOY,cAAcb,KAAKD,WAxB9B,oBA2BE,WACE,MAAgCC,KAAKJ,MAA7B0B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAjClC,GAAyBR,aCbzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.84b45942.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      console.info(\n        this.state.date.toLocaleTimeString(undefined, { hour12: false }),\n      );\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString(undefined, { hour12: false })}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}